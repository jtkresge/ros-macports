# -*- coding: utf-8; mode: tcl; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- vim:fenc=utf-8:ft=tcl:et:sw=4:ts=4:sts=4
# $Id$

PortSystem          1.0

name                ros-groovy-core
version             1.0.0
categories          devel
platforms           darwin
license             bsd
maintainers         afit.edu:kyle.kauffman
description         Robotic Operating System
long_description    ROS is a collection of tools and libraries for robotics applications
homepage            http://www.ros.org/

depends_build       port:py27-catkin-pkg \
                    port:py27-rosdep \
                    port:py27-rosdistro \
                    port:py27-rosinstall \
                    port:py27-rospkg \
                    port:py27-vcstools \
                    port:py27-wstool \
                    port:libyaml \
                    port:yaml-cpp \
                    port:tinyxml \
                    port:pkgconfig \
                    port:ros-log4cxx \
                    port:eigen \
                    port:subversion \
                    port:git-core \
                    port:mercurial \
                    port:google-test \
                    port:qt4-mac \
                    port:py27-yaml \
                    port:py27-empy \
                    port:py27-setuptools \
                    port:py27-dateutil \
                    port:py27-nose \
                    port:boost

conflicts           ros-core ros-desktop ros-groovy-desktop

fetch {
     # fix error when rosinstall fails and another install is attempted before "port clean"
     file delete -force ${worksrcpath}
     file mkdir ${worksrcpath}

     # fix AF_UNIX too long error with wstool ($worksrcpath is too long for bind)     
     set env(TMPDIR) "/tmp/ros_macports_tmp"
     exec wstool init -j1 ${worksrcpath}/src http://packages.ros.org/web/rosinstall/generate/raw/groovy/ros_comm     
}

checksum {}
configure {}
configure.compiler clang
configure.cflags-append "-DBOOST_SIGNALS_NO_DEPRECATION_WARNING"

build.asroot yes

build {
    file delete -force ${worksrcpath}/build_isolated
    file delete -force ${worksrcpath}/devel_isolated
    file delete -force ${worksrcpath}/install_isolated

     set env(LIBRARY_PATH) "${prefix}/lib"

     # Force catkin to use chosen compiler
     set env(CC) "${configure.cc}"
     set env(CXX) "${configure.cxx}"
     set env(CPP) "${configure.cpp}"

     # Point scripts to the python that installed the ros python modules
    set files [list catkin/bin/catkin_make_isolated roslib/src/roslib/launcher.py]

     foreach f $files {
          reinplace "s|/usr/bin/env python|${prefix}/bin/python2.7|g" ${worksrcpath}/src/$f
     }

     # Fix DYLD_LIBRARY_PATH overriding system libs
     reinplace "s|DYLD_LIBRARY_PATH|DYLD_FALLBACK_LIBRARY_PATH|g" ${worksrcpath}/src/catkin/cmake/templates/_setup_util.py.in

    system "DESTDIR=${destroot} ${worksrcpath}/src/catkin/bin/catkin_make_isolated \
          --source ${worksrcpath}/src \
          --build ${worksrcpath}/build_isolated \
          --devel ${worksrcpath}/devel_isolated \
          -DCMAKE_SKIP_RPATH:BOOL=OFF \
          -DCMAKE_INSTALL_NAME_DIR:STRING=${prefix}/ros/groovy/lib \
          -DCMAKE_BUILD_WITH_INSTALL_RPATH:BOOL=ON \
          -DCMAKE_INSTALL_RPATH_USE_LINK_PATH:BOOL=ON \
          -DSETUPTOOLS_DEB_LAYOUT=OFF \
          -DPYTHON_EXECUTABLE:FILEPATH=${prefix}/bin/python2.7 \
          --install-space=${prefix}/ros/groovy \
          --install"
}

destroot {
}

post-destroot {
     reinplace "s|CMAKE_PREFIX_PATH = '.*')|CMAKE_PREFIX_PATH = '/opt/local/ros/groovy'.split(';')|" ${destroot}${prefix}/ros/groovy/_setup_util.py
}

# ROS Master URI needs empty .catkin file in ${prefix} if ${prefix} is the ROS install dir
destroot.violate_mtree yes
